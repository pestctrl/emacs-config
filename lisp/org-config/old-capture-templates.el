(setq org-capture-templates-old
      `(("t" ,(format "%s\tTodo" (all-the-icons-octicon "inbox" :face 'all-the-icons-yellow :v-adjust 0.01))
         entry (file ,(my/agenda-file "refile.org"))
         "* STUFF %?\n:PROPERTIES:\n:CREATED: %U\n:VIEWING: %a\n:END:")
        ("r" ,(format "%s\tReviews" (all-the-icons-faicon "share" :face 'all-the-icons-lblue)))
        ("ra" "\tAutomatic Review" entry (file+function ,(my/org-file "entries/reviews.gpg") setup-automatic-review)
         (file ,(my/org-file "templates/weekly-review.org")))
        ("rm" "\tManual Review" entry (file+function ,(my/org-file "entries/reviews.gpg") setup-manual-review)
         (file ,(my/org-file "templates/weekly-review.org")))
        ("ro" "\tReorient" entry (file ,(my/org-file "entries/reviews.gpg"))
         (file ,(my/org-file "templates/reorient.org")))
        ;; ("rt" "Review Task" entry (file+headline ,(my/org-file "entries/reviews.gpg") "Tasks")
        ;;  "* TODO %?")
        ;; ("d" "\tDream" entry (file+olp+datetree ,(my/org-file "entries/dream.org"))
        ;;  "* %?")
        ("D" "\tDistracted" entry (file ,(my/agenda-file "dev.org"))
         "* TODO %?" :clock-in t :clock-resume t)
        ("T" "\tNew Task" entry (file ,(my/agenda-file "dev.org"))
         "* TODO %?" :clock-in t :clock-keep t)
        ("m" ,(format "%s\tMoney" (all-the-icons-material "attach_money" :face 'all-the-icons-lgreen)))
        ("mc" ,(format "%s\tCredit Card" (all-the-icons-faicon "credit-card" :face 'all-the-icons-blue))
         plain (file ,(my/org-file "entries/finances/ledger.ledger"))
         (file ,(my/org-file "templates/credit.ledger")) :unnarrowed t :empty-lines 1)
        ("mg" "\tGeneral" plain (file ,(my/org-file "entries/finances/ledger.ledger"))
         (file ,(my/org-file "templates/basic.ledger")) :unnarrowed t :empty-lines 1)
        ("c" "\tRecord Comms Message" entry (file+olp+datetree ,(my/agenda-file "datetree.org"))
         "* TODO %?")
        ("e" "\tEmacs config snippet" entry (file+headline "~/.emacs.d/config-base.org" "New")
         "* %^{Title}\n#+begin_src emacs-lisp\n %?\n#+end_src")
        ("j" "\tJournal")
        ("jd" "\tDecision template" entry (file+olp+datetree ,(my/org-file "entries/journal.gpg"))
         (file ,(my/org-file "templates/decide.org")))
        ("je" "\tJournal Entry" entry (file+olp+datetree ,(my/org-file "entries/journal.gpg"))
         "* %<%R> %?")
        ("jp" "\tProgramming Interview Prep Journal" entry (file+olp+datetree ,(my/org-file "entries/journal.gpg"))
         "* ")
        ("C" "\tCreate checklist")
        ("Cc" "\tConference Via Bus" entry (file ,(my/agenda-file "dev.org"))
         (file ,(my/org-file "checklists/conference.org"))
         :conference/airplane nil)
        ("Cm" "\tMorning routine" entry (file ,(my/org-file "entries/routines.org"))
         (file ,(my/org-file "checklists/mornings.org")))
        ("Cn" "\tNightly routine" entry (file ,(my/org-file "entries/routines.org"))
         (file ,(my/org-file "checklists/nights.org")))
        ;; ("y" "Elfeed YouTube" entry (file+olp ,(my/agenda-file "dev.org") "rewards" "Videos")
        ;;  "* TODO %(identity elfeed-link-org-capture)")
        ("p" "\tProtocol" entry (file ,(my/agenda-file "refile.org"))
         "* STUFF %^{Title}\n:PROPERTIES:\n:CREATED: %U\n:URL: %:link\n:END:\n#+begin_example\n%i\n#+end_example\n%?")
        ("L" "\tProtocol Link" entry (file ,(my/agenda-file "refile.org"))
         "* STUFF %? [[%:link][%:description]]\n:PROPERTIES:\n:CREATED: %U\n:URL: %:link\n:END:")
        ("l" "\tAdd to lists conveniently")
        ("lP" "Plan week" entry (file+headline ,(my/agenda-file "dev.org") "The Plan")
         (file ,(my/org-file "templates/weekly-plan.org")))
        ("lp" "Plan your day" entry (file+headline ,(my/agenda-file "dev.org") "The Plan")
         (file ,(my/org-file "templates/daily-plan.org")))
        ("lc" "\tCringe" entry (file ,(my/org-file "entries/cringe.gpg")) "* %?")
        ("lm" "\tMental Model" entry (file ,(my/org-file "entries/mental_models.gpg")) "* %?")
        ("li" "\tImportant Information" entry (file ,(my/org-file "entries/important.gpg")) "* %?")))
